【 キャッシュのクリア 】

php artisan config:clear
php artisan cache:clear
php artisan route:clear
php artisan view:clear

※ 本番環境でも定期的なキャッシュのクリア、必要に応じての再編成が必要




【 laravelの再編成 】

◆ php artisan migrate:refresh
すべてのマイグレーションをロールバックしてから再度実行。
(これにより、データベースの状態をリセットして最新のマイグレーションを適用できる。)


◆ php artisan migrate:fresh
（こちらはテーブルを完全に削除してから再作成。）


◆ php artisan migrate:reset
すべてのマイグレーションをロールバック。
！！データベースのすべてのテーブルが削除される！！


◆ php artisan migrate:rollback --step=1
直前のマイグレーションをロールバック。
特定のステップ数を指定してロールバックすることも可能。


※ ↑ データベース内のデータが消えてしまうので実行する時は注意。
　　でも、安定性を確保するために、必要に応じてやるといいみたい。





【 表示が上手くいかない時は… 】

※ 表示が上手くいかない時は、キャッシュのクリアと、
コンパイルの確認 (
    npm install
    npm run dev
)
をやってみる。

必要なデータが作成されているかも確認
php artisan migrate




ローカル環境や開発中は、頻繁にコードが変更されるため、キャッシュが残りやすく、
問題が発生しやすいことがあるらしい。

