【 Seeder / Factory / test 】

※ php artisan make:factory なんとかFactory
Factoryファイルの作成


※ php artisan make:seeder なんとかSeeder
Seederファイルの作成

php artisan db:seed
シーディングの実行（DatabaseSeeder.phpに基づいたダミーデータを作成）

php artisan db:seed --class=シーダークラス名
特定のSeederを実行する



※ php artisan make:test テストクラス名
テストファイルの作成

php artisan test テストファイル
テストの実行





【 Seeder 】

◆ Illuminate\Support\Facades\DBを使う場合
データベースに直接SQL文を書いてデータを操作することができる

例）
use Illuminate\Support\Facades\DB;

DB::table('posts')->insert([
    'title' => '初めての投稿',
    'content' => 'これは初めての投稿です。',
]);



◆ \App\Models\Post::createを使う場合
LaravelのEloquent ORM（オブジェクト関係マッピング）を利用してデータを操作することができる。
※ モデルを使ってデータを操作するやり方

例）
use App\Models\Post;

Post::create([
    'title' => '初めての投稿',
    'content' => 'これは初めての投稿です。',
]);



DBファサードを使うと、SQL文を直接書くので、細かい制御ができるがコードが複雑になることも。
Eloquent ORMはコードがシンプルになるが、複雑なカスタマイズは難しいかも。





【 Factory 】

作成するダミーデータを日本語にしたい場合は、
config\app.phpで

'faker_locale' => 'ja_JP',

を設定。

※ 日本語に対応していないものもある。

